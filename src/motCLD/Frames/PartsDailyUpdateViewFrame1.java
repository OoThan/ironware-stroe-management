/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package motCLD.Frames;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import motCLD.Classes.Parts;

/**
 *
 * @author ucsy
 */
public class PartsDailyUpdateViewFrame1 extends javax.swing.JFrame {

    /**
     * Creates new form PartsDailyUpdateViewFrame
     */
    
    Connection con=null;
    public static String type;
    String url = "jdbc:mysql://localhost:3306/Bestie_Shopkeeper_DB";
    String login = "admeSkpper";
    String pass = "memeSkpper";
    
    public PartsDailyUpdateViewFrame1() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }
    
    public ArrayList<Parts> getPartsList() throws Exception{
        SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-d");
            Calendar currentCalendar = Calendar.getInstance();
            Date preTime = currentCalendar.getTime();
            Calendar postCalendar = Calendar.getInstance();
            postCalendar.add(Calendar.DATE, 1);
            Date postTime = postCalendar.getTime();
            String preDay=dateFormat.format(preTime);
            String postDay=dateFormat.format(postTime);
            ArrayList<Parts> partsList=new ArrayList<Parts>();
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection)DriverManager.getConnection(url,login,pass);
            String query="select pts.Part_ID,pts.Part_Name,pts.Part_Type from Parts AS pts INNER JOIN Parts_Update_Log AS ptsULog ON pts.Part_ID=ptsULog.Part_ID AND  ptsULog.Update_Date between ? AND ? group by ptsULog.Part_Name,ptsULog.Part_Type";
            PreparedStatement dailyUdP=con.prepareStatement(query);
            dailyUdP.setString(1, preDay);
            dailyUdP.setString(2, postDay);
            ResultSet rs= dailyUdP.executeQuery();
        try {
            Parts part;
            
            while (rs.next()) {
                part=new Parts(rs.getInt("Part_ID"),rs.getString("Part_Name"),rs.getString("Part_Type"));
                partsList.add(part);
            }
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(PartsDailyUpdateViewFrame1.class.getName()).log(Level.SEVERE, null, ex);
        }
        return partsList;
    }
    
    public void setData(int index){
        try {
                txtPartID.setText(String.valueOf(getPartsList().get(index).getPart_ID()));
                txtPartName.setText(getPartsList().get(index).getPart_Name());
                txtPartType.setText(getPartsList().get(index).getPart_Type());
        } catch (Exception ex) {
            Logger.getLogger(PartsDailyUpdateViewFrame1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtPartID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPartName = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        btnViewLog = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtPartType = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        btnRefreshData = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(140, 122, 230));

        jPanel2.setBackground(new java.awt.Color(140, 122, 230));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "View Updated Parts", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 1, 18), java.awt.SystemColor.textHighlightText)); // NOI18N

        jLabel7.setBackground(new java.awt.Color(220, 221, 225));
        jLabel7.setFont(new java.awt.Font("Serif", 1, 17)); // NOI18N
        jLabel7.setForeground(java.awt.SystemColor.control);
        jLabel7.setText("   Part ID");
        jLabel7.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        txtPartID.setEditable(false);
        txtPartID.setFont(new java.awt.Font("Serif", 0, 17)); // NOI18N
        txtPartID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPartIDActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(220, 221, 225));
        jLabel3.setFont(new java.awt.Font("Serif", 1, 17)); // NOI18N
        jLabel3.setForeground(java.awt.SystemColor.control);
        jLabel3.setText("   Part Name");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        txtPartName.setEditable(false);
        txtPartName.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        txtPartName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPartNameActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnViewLog.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        btnViewLog.setText("View Log");
        btnViewLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewLogActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(220, 221, 225));
        jLabel4.setFont(new java.awt.Font("Serif", 1, 17)); // NOI18N
        jLabel4.setForeground(java.awt.SystemColor.control);
        jLabel4.setText("   Part Type");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        txtPartType.setEditable(false);
        txtPartType.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        txtPartType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPartTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewLog, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtPartType, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                        .addComponent(txtPartName)
                        .addComponent(txtPartID)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPartID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPartName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPartType, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewLog, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(140, 122, 230));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Updated Parts To View", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 1, 18), java.awt.SystemColor.textHighlightText)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Part_ID", "Part_Name", "Part_Type", "Avaliable_Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(140, 122, 230));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Updated Parts Log", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 1, 18), java.awt.SystemColor.textHighlightText)); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Part_ID", "Part_Name", "Part_Type", "New_Quantity", "Existing_Quantity", "New_Price", "Existing_Price", "Update_Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
        );

        jLabel8.setFont(new java.awt.Font("Monospaced", 3, 30)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 153, 51));
        jLabel8.setText("    Bestie Shopkeeper ");
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        btnRefreshData.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        btnRefreshData.setText("Refresh Data");
        btnRefreshData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshDataActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Courier New", 1, 17)); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefreshData, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefreshData, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPartIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPartIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPartIDActionPerformed

    private void txtPartNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPartNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPartNameActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
            model.setRowCount(0);
            txtPartID.setText("");
            txtPartName.setText("");
            txtPartType.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnViewLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewLogActionPerformed
        // TODO add your handling code here:
        if(txtPartID.getText().equals("") || txtPartName.getText().equals("") || txtPartType.getText().equals("")){
            JOptionPane.showMessageDialog(this,
        "Any Fields has Empty!",
        "Field Blank problem",
        JOptionPane.WARNING_MESSAGE);
        }else{
                try {   
            SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-d");
            Calendar currentCalendar = Calendar.getInstance();
            Date preTime = currentCalendar.getTime();
            Calendar postCalendar = Calendar.getInstance();
            postCalendar.add(Calendar.DATE, 1);
            Date postTime = postCalendar.getTime();
            String preDay=dateFormat.format(preTime);
            String postDay=dateFormat.format(postTime);
            
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection)DriverManager.getConnection(url,login,pass);
            String Part_ID=txtPartID.getText();
            String Part_Name=txtPartName.getText();
            String Part_Type=txtPartType.getText();
            String query="select Part_ID,Part_Name,Part_Type,New_Quantity,Existing_Quantity,Part_Unit,New_Price,Existing_Price,Update_Date from Parts_Update_Log where Part_ID=? and Part_Name=? and Part_Type=? and Flag=1 and Update_Date between ? AND ?";
            PreparedStatement updateLog=con.prepareStatement(query);
            updateLog.setInt(1, Integer.parseInt(Part_ID));
            updateLog.setString(2, Part_Name);
            updateLog.setString(3, Part_Type);
            updateLog.setString(4, preDay);
            updateLog.setString(5, postDay);
            ResultSet rs= updateLog.executeQuery();
            DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
            model.setRowCount(0);
            while (rs.next()) {
                    String PartID = rs.getString(1);
                    String PartName = rs.getString(2);
                    String PartType = rs.getString(3);
                    String New_Quantity = rs.getString(4)+" "+rs.getString(6);
                    String Existing_Quantity = rs.getString(5)+" "+rs.getString(6);
                    String New_Price = rs.getString(7);
                    String Existing_Price = rs.getString(8);
                    String Update_Date = rs.getString(9);
                    Object[] row={PartID,PartName,PartType,New_Quantity,Existing_Quantity,New_Price,Existing_Price,Update_Date};
                    model.addRow(row);
                }
                con.close();
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PartsDailyUpdateViewFrame1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PartsDailyUpdateViewFrame1.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
    }//GEN-LAST:event_btnViewLogActionPerformed

    private void btnRefreshDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshDataActionPerformed
        // TODO add your handling code here:
        try{  
            SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-d");
            Calendar currentCalendar = Calendar.getInstance();
            Date preTime = currentCalendar.getTime();
            Calendar postCalendar = Calendar.getInstance();
            postCalendar.add(Calendar.DATE, 1);
            Date postTime = postCalendar.getTime();
            String preDay=dateFormat.format(preTime);
            String postDay=dateFormat.format(postTime);
            
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection)DriverManager.getConnection(url,login,pass);
            String query="select pts.Part_ID,pts.Part_Name,pts.Part_Type,pts.Avaliable_Quantity,pts.Part_Unit,pts.Price from Parts AS pts INNER JOIN Parts_Update_Log AS ptsULog ON pts.Part_ID=ptsULog.Part_ID AND  ptsULog.Update_Date between ? AND ? group by ptsULog.Part_Name,ptsULog.Part_Type";
            PreparedStatement dailyUdP=con.prepareStatement(query);
            dailyUdP.setString(1, preDay);
            dailyUdP.setString(2, postDay);
            ResultSet dataRs= dailyUdP.executeQuery();
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            while (dataRs.next()) {
                String Part_ID = dataRs.getString(1);
                String Part_Name = dataRs.getString(2);
                String Part_Type = dataRs.getString(3);
                String Avaliable_Quantity = dataRs.getString(4)+" "+dataRs.getString(5);
                String Price = dataRs.getString(6);
                Object[] row={Part_ID,Part_Name,Part_Type,Avaliable_Quantity,Price};
                model.addRow(row);
            }
                
                con.close();
            DefaultTableModel model1=(DefaultTableModel)jTable2.getModel();
            model1.setRowCount(0);
            txtPartID.setText("");
            txtPartName.setText("");
            txtPartType.setText("");

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PartsDailyUpdateViewFrame1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PartsDailyUpdateViewFrame1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRefreshDataActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            // TODO add your handling code here:
            SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-d");
            Calendar currentCalendar = Calendar.getInstance();
            Date preTime = currentCalendar.getTime();
            Calendar postCalendar = Calendar.getInstance();
            postCalendar.add(Calendar.DATE, 1);
            Date postTime = postCalendar.getTime();
            String preDay=dateFormat.format(preTime);
            String postDay=dateFormat.format(postTime);
            
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection)DriverManager.getConnection(url,login,pass);
            String query="select pts.Part_ID,pts.Part_Name,pts.Part_Type,pts.Avaliable_Quantity,pts.Part_Unit,pts.Price from Parts AS pts INNER JOIN Parts_Update_Log AS ptsULog ON pts.Part_ID=ptsULog.Part_ID AND  ptsULog.Update_Date between ? AND ? group by ptsULog.Part_Name,ptsULog.Part_Type";
            PreparedStatement dailyUdP=con.prepareStatement(query);
            dailyUdP.setString(1, preDay);
            dailyUdP.setString(2, postDay);
            ResultSet dataRs= dailyUdP.executeQuery();
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            while (dataRs.next()) {
                String Part_ID = dataRs.getString(1);
                String Part_Name = dataRs.getString(2);
                String Part_Type = dataRs.getString(3);
                String Avaliable_Quantity = dataRs.getString(4)+" "+dataRs.getString(5);
                String Price = dataRs.getString(6);
                Object[] row={Part_ID,Part_Name,Part_Type,Avaliable_Quantity,Price};
                model.addRow(row);
            }
                
                con.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PartsDailyUpdateViewFrame1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PartsDailyUpdateViewFrame1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int index=jTable1.getSelectedRow();
        setData(index);
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtPartTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPartTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPartTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PartsDailyUpdateViewFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PartsDailyUpdateViewFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PartsDailyUpdateViewFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PartsDailyUpdateViewFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PartsDailyUpdateViewFrame1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnRefreshData;
    private javax.swing.JButton btnViewLog;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtPartID;
    private javax.swing.JTextField txtPartName;
    private javax.swing.JTextField txtPartType;
    // End of variables declaration//GEN-END:variables
}
